package tw.freewind.opml

import scala.xml.Elem
import scala.util.{Success, Failure, Try}

object OpmlGenerator {

  def apply(blogs: List[Blog]): Elem = {
    <opml version="1.0">
      <head>
        <title>Generated by OpmlGenerator from Freewind</title>
      </head>
      <body>
        <outline text="ThoughtWorks">
          {
            for {
              (blog, index) <- blogs.zipWithIndex
            } yield {
              val feed = findFeed(blog)
              println(s"${index+1}/${blogs.size}, feed: ${feed.url}\n")
              <outline text={blog.name} type="rss" xmlUrl={feed.url} htmlUrl={blog.url}/>
            }
          }
        </outline>
      </body>
    </opml>
  }

  private def findFeed(blog: Blog): Feed = {
    Try(FeedFinder.findFeed(blog)) match {
      case Success(Some(feed)) => feed
      case Success(None) => new Feed("no feed found!")
      case Failure(e) => new Feed("can't visit!")
    }
  }

}


